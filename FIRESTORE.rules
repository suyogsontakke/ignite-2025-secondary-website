rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- DEFAULT: DENY ALL ---
    match /{document=**} {
      allow read, write: if false;
    }

    // --- RULES FOR UPI Booking Site ---
    // Allows any user (anonymous) to create a new document in
    // 'pending_registrations' with specific fields for the UPI flow.
    match /pending_registrations/{docId} {
      allow create: if
        request.auth != null &&
        // Fields for UPI version: name, email, mobile, status, registeredAt
        request.resource.data.keys().hasOnly([
          'name', 'email', 'mobile', 'status', 'registeredAt'
        ]) &&
        request.resource.data.name is string && request.resource.data.name.size() > 0 &&
        request.resource.data.email is string && request.resource.data.email.matches('^[^@]+@[^@]+\\.[^@]{2,}$') &&
        request.resource.data.mobile is string && request.resource.data.mobile.size() == 10 &&
        request.resource.data.status == "pending_payment" && // Ensure correct status is set
        request.resource.data.registeredAt == request.time;
      
      // Allows ONLY the admin to read and delete pending signups (for the admin panel)
      allow read, delete: if
        request.auth.uid == 'YOUR_ADMIN_UID_HERE'; // <-- PASTE YOUR ADMIN UID
    }

    // --- RULES FOR Admin Dashboard AND Verifier App ---
    // These rules remain the same, controlling access for approval and check-in
    match /approved_registrations/{docId} {
      // Allow ADMIN to create (approve/manual add in admin panel) and read
      allow create, read: if
        request.auth.uid == 'YOUR_ADMIN_UID_HERE'; // <-- PASTE YOUR ADMIN UID

      // Allow ADMIN to update ONLY check-in fields
      allow update: if
        request.auth.uid == 'YOUR_ADMIN_UID_HERE' // <-- PASTE YOUR ADMIN UID
        && request.resource.data.diff(request.data).affectedKeys()
             .hasOnly(['checkedIn', 'checkedInAt']);
    }
  }
}
